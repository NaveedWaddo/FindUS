{"version":3,"file":"Button-5075d3c0.js","sources":["../../src/components/atoms/Button/Button.tsx"],"sourcesContent":["import { Loader } from '../../molecules/Loader'\n\ntype ButtonSizes = 'none' | 'sm' | 'md' | 'lg' | 'xl'\n\nexport type IButtonProps = {\n  size?: ButtonSizes\n  variant?: 'contained' | 'outlined' | 'text'\n  color?: 'primary' | 'success' | 'error' | 'white' | 'black'\n  fullWidth?: boolean\n  isLoading?: boolean\n} & React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>\n\nconst variantColor = {\n  contained: {\n    primary: 'text-white bg-black hover:bg-gray-900',\n    white: 'text-black bg-white',\n    black: 'text-white bg-black hover:bg-gray-900',\n    success: 'text-white bg-green hover:bg-green-700',\n    error: 'text-white bg-red hover:bg-red-700',\n  },\n\n  outlined: {\n    primary: 'border-2 border-black text-black hover:bg-black/10',\n    white: 'border-2 border-white text-white hover:bg-white/10',\n    black: 'border-2 border-black text-black hover:bg-black/10',\n    success: 'border-2 border-green text-green hover:bg-green-100',\n    error: 'border-2 border-red text-red hover:bg-red-100',\n  },\n  text: {\n    primary: 'text-primary ',\n    white: 'text-black',\n    black: 'text-white',\n    success: 'text-green ',\n    error: 'text-red ',\n  },\n}\n\nconst sizes: { [key in ButtonSizes]: string } = {\n  none: 'text-xs',\n  sm: 'px-3 py-1.5 text-xs',\n  md: 'px-4 py-2 text-sm',\n  lg: 'px-5 py-2 text-base',\n  xl: 'px-8 py-3 text-xl',\n}\n\nexport const Button = ({\n  size = 'md',\n  variant = 'contained',\n  color = 'primary',\n  fullWidth = false,\n  disabled = false,\n  children,\n  className,\n  isLoading = false,\n  type = 'button',\n  ...props\n}: IButtonProps) => {\n  const variantCls = variantColor[variant][color]\n  //   variant === 'text' ? sizes.none :\n  const sizeCls = sizes[size]\n\n  const fwCls = fullWidth && 'w-full'\n  const disCls = (disabled || isLoading) && 'opacity-60 cursor-auto'\n\n  return (\n    <button\n      // eslint-disable-next-line react/button-has-type\n      type={type}\n      disabled={disabled || isLoading}\n      className={` relative rounded font-medium ${sizeCls} ${fwCls} ${variantCls} ${disCls}  ${className} `}\n      {...props}\n    >\n      {isLoading ? (\n        <>\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <Loader />\n          </div>\n          <div className=\"opacity-10\">{children}</div>\n        </>\n      ) : (\n        <>{children}</>\n      )}\n    </button>\n  )\n}\n"],"names":["variantColor","sizes","Button","size","variant","color","fullWidth","disabled","children","className","isLoading","type","props","variantCls","sizeCls","fwCls","disCls","jsx","jsxs","Fragment","Loader"],"mappings":"uFAeA,MAAAA,EAAA,CAAqB,UAAA,CACR,QAAA,wCACA,MAAA,sBACF,MAAA,wCACA,QAAA,yCACE,MAAA,oCACF,EACT,SAAA,CAEU,QAAA,qDACC,MAAA,qDACF,MAAA,qDACA,QAAA,sDACE,MAAA,+CACF,EACT,KAAA,CACM,QAAA,gBACK,MAAA,aACF,MAAA,aACA,QAAA,cACE,MAAA,WACF,CAEX,EAEAC,EAAA,CAAgD,KAAA,UACxC,GAAA,sBACF,GAAA,oBACA,GAAA,sBACA,GAAA,mBAEN,EAEOC,EAAA,CAAA,CAAgB,KAAAC,EAAA,KACd,QAAAC,EAAA,YACG,MAAAC,EAAA,UACF,UAAAC,EAAA,GACI,SAAAC,EAAA,GACD,SAAAC,EACX,UAAAC,EACA,UAAAC,EAAA,GACY,KAAAC,EAAA,SACL,GAAAC,CAET,IAAA,CACE,MAAAC,EAAAb,EAAAI,CAAA,EAAAC,CAAA,EAEAS,EAAAb,EAAAE,CAAA,EAEAY,EAAAT,GAAA,SACAU,GAAAT,GAAAG,IAAA,yBAEA,OAAAO,EAAA,IACE,SAAC,CAAA,KAAAN,EAEC,SAAAJ,GAAAG,EACsB,UAAA,iCAAAI,CAAA,IAAAC,CAAA,IAAAF,CAAA,IAAAG,CAAA,KAAAP,CAAA,IAC4E,GAAAG,EAC9F,SAAAF,EAAAQ,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAIAF,MAAA,MAAA,CAAA,UAAA,oDAAA,SAAAA,MAAAG,EAAA,CAAA,CAAA,EAAA,EAEAH,EAAAA,IAAA,MAAA,CAAA,UAAA,aAAA,SAAAT,CAAA,CAAA,CACsC,CAAA,CAAA,EAAAS,EAAA,IAAAE,WAAA,CAAA,SAAAX,CAAA,CAAA,CAG5B,CAAA,CAIpB"}