{"version":3,"file":"RegisterForm.stories-b7f3c4eb.js","sources":["../../src/components/templates/RegisterForm/RegisterForm.tsx"],"sourcesContent":["import { Button } from '../../atoms/Button'\nimport { HtmlInput } from '../../atoms/HtmlInput'\nimport { HtmlLabel } from '../../atoms/HtmlLabel'\nimport Link from 'next/link'\nimport {\n  googleSignIn,\n  register as registerUser,\n} from '@findus-org/network/src/auth'\n\nimport { Form } from '../../atoms/Form'\nimport { FormTypeRegister, useFormRegister } from '@findus-org/forms/src/signUp'\nimport { useAppDispatch, useAppSelector } from '@findus-org/store'\nimport { selectUid, setDisplayName } from '@findus-org/store/user'\nimport { IconBrandGoogle } from '@tabler/icons-react'\n\nimport { notification$ } from '@findus-org/util/subjects'\nimport { useRouter } from 'next/router'\n\nimport { useAsync } from '@findus-org/hooks/src/fetcher'\nimport { Role } from '@findus-org/types'\nimport { useEffect } from 'react'\nimport { PlainButton } from '../../atoms/PlainButton'\n\nexport interface IRegisterFormProps {\n  className?: string\n  role?: Role\n}\n\nexport const RegisterForm = ({ role, className }: IRegisterFormProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useFormRegister()\n\n  const dispatch = useAppDispatch()\n\n  const { data, loading, error, success, callAsyncFn } = useAsync(\n    (data: FormTypeRegister) => registerUser(data),\n    (err: any) => {\n      console.log('err', err)\n      if (err.code === 'auth/email-already-in-use') {\n        return 'Registration failed.'\n      }\n      return 'Something went wrong. Please try again.'\n    },\n  )\n\n  const router = useRouter()\n\n  useEffect(() => {\n    if (error) notification$.next({ message: error, duration: 8000 })\n  }, [error])\n\n  const uid = useAppSelector(selectUid)\n\n  useEffect(() => {\n    if (success || uid) {\n      router.push('/')\n    }\n  }, [success, uid])\n\n  return (\n    <div>\n      <Form\n        className={role === 'officer' ? 'pointer-events-none opacity-40 ' : ''}\n        onSubmit={handleSubmit(async ({ email, password, displayName }) => {\n          // hack to solve the delay in firebase displayname update.\n          dispatch(setDisplayName(displayName || ''))\n          await callAsyncFn({ email, password, displayName })\n        })}\n      >\n        <HtmlLabel title=\"Email\" error={errors.email?.message}>\n          <HtmlInput placeholder=\"Enter the email.\" {...register('email')} />\n        </HtmlLabel>\n        <HtmlLabel title=\"Password\" error={errors.password?.message}>\n          <HtmlInput\n            type=\"password\"\n            placeholder=\"······\"\n            {...register('password')}\n          />\n        </HtmlLabel>\n        <HtmlLabel title=\"Display name\" error={errors.displayName?.message}>\n          <HtmlInput\n            placeholder=\"Enter your name.\"\n            {...register('displayName')}\n          />\n        </HtmlLabel>\n        {Object.keys(errors).length ? (\n          <div className=\"text-xs text-gray-600\">\n            Please fix the above {Object.keys(errors).length} errors\n          </div>\n        ) : null}\n        <Button type=\"submit\" isLoading={loading} fullWidth>\n          Create account\n        </Button>\n      </Form>\n      <div className=\"mt-4 text-sm \">\n        Already have an FindUS account?\n        <br />\n        <Link href=\"/login\" className=\"font-bold underline underline-offset-4\">\n          Login\n        </Link>{' '}\n        now.\n      </div>\n      <div className=\"mt-4 text-xs text-center text-gray\">Continue with</div>\n      <div className=\"flex justify-center gap-2 mt-2\">\n        <PlainButton\n          className=\"p-1 border-2 border-black rounded-full hover:shadow-lg\"\n          onClick={googleSignIn}\n        >\n          <IconBrandGoogle />\n        </PlainButton>\n      </div>\n    </div>\n  )\n}\n"],"names":["RegisterForm","role","className","register","handleSubmit","errors","useFormRegister","dispatch","useAppDispatch","data","loading","error","success","callAsyncFn","useAsync","data2","registerUser","err","router","useRouter","useEffect","notification$","uid","useAppSelector","selectUid","jsxs","Form","email","password","displayName","setDisplayName","jsx","HtmlLabel","_a","HtmlInput","_b","_c","Button","Link","PlainButton","googleSignIn","IconBrandGoogle"],"mappings":"wxCA4BO,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KAAA,WACL,KAAA,CAAM,SAAAC,EACJ,aAAAC,EACA,UAAA,CAAA,OAAAC,CAAA,CACoB,EAAAC,EAAA,EAGtBC,EAAAC,IAEA,CAAA,KAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,QAAAC,EAAA,YAAAC,CAAA,EAAAC,EAAuDC,GAAAC,EAAAD,CAAA,EACRE,IAE3C,QAAA,IAAA,MAAAA,CAAA,EACAA,EAAA,OAAA,4BACE,uBAEF,0CACF,EAGFC,EAAAC,EAAAA,YAEAC,EAAAA,UAAA,IAAA,CACET,GAAWU,EAAA,KAAA,CAAA,QAAAV,EAAA,SAAA,GAAA,CAAA,CAAqD,EAAA,CAAAA,CAAA,CAAA,EAGlE,MAAAW,EAAAC,EAAAC,CAAA,EAEAJ,OAAAA,EAAAA,UAAA,IAAA,EACER,GAAAU,IACEJ,EAAA,KAAA,GAAA,CACF,EAAA,CAAAN,EAAAU,CAAA,CAAA,EAGFG,EAAA,KAAA,MAAA,CAAA,SAAA,CAEIA,EAAA,KAAAC,EAAC,CAAA,UAAAzB,IAAA,UAAA,kCAAA,GACqE,SAAAG,EAAA,MAAA,CAAA,MAAAuB,EAAA,SAAAC,EAAA,YAAAC,CAAA,IAAA,CAGlEtB,EAAAuB,EAAAD,GAAA,EAAA,CAAA,EACA,MAAAhB,EAAA,CAAA,MAAAc,EAAA,SAAAC,EAAA,YAAAC,CAAA,CAAA,CAAkD,CAAA,EACnD,SAAA,CAEDE,MAAAC,EAAA,CAAA,MAAA,QAAA,OAAAC,EAAA5B,EAAA,QAAA,YAAA4B,EAAA,QAAA,SAAAF,EAAAA,IAAAG,EAAA,CAAA,YAAA,mBAAA,GAAA/B,EAAA,OAAA,CAAA,CAAA,EAAA,EAEA4B,MAAAC,EAAA,CAAA,MAAA,WAAA,OAAAG,EAAA9B,EAAA,WAAA,YAAA8B,EAAA,QAAA,SAAAJ,EAAA,IAEEG,EAAC,CAAA,KAAA,WACM,YAAA,SACO,GAAA/B,EAAA,UAAA,CACW,CAAA,EAAA,EAE3B4B,MAAAC,EAAA,CAAA,MAAA,eAAA,OAAAI,EAAA/B,EAAA,cAAA,YAAA+B,EAAA,QAAA,SAAAL,EAAA,IAEEG,EAAC,CAAA,YAAA,mBACa,GAAA/B,EAAA,aAAA,CACc,CAAA,EAAA,EAE9B,OAAA,KAAAE,CAAA,EAAA,OAAAoB,OAAA,MAAA,CAAA,UAAA,wBAAA,SAAA,CAEyC,wBAAA,OAAA,KAAApB,CAAA,EAAA,OACK,SAAO,CAAA,CAAA,EAAA,KAEjD0B,EAAAA,IAAAM,EAAA,CAAA,KAAA,SAAA,UAAA3B,EAAA,UAAA,GAAA,SAAA,gBAAA,CAAA,CAGJ,CAAA,CAAA,EACFe,EAAAA,KAAA,MAAA,CAAA,UAAA,gBAAA,SAAA,CAC+B,kCAAAM,EAAA,IAAA,KAAA,EAAA,EAEzBA,MAAAO,EAAA,CAAA,KAAA,SAAA,UAAA,yCAAA,SAAA,QAAA,EAGJ,IAAQ,MAAI,EAAA,EAEdP,EAAA,IAAA,MAAA,CAAA,UAAA,qCAAA,SAAA,gBAAA,EACiEA,EAAAA,IAAA,MAAA,CAAA,UAAA,iCAAA,SAAAA,EAAA,IAE/DQ,EAAC,CAAA,UAAA,yDACW,QAAAC,EACD,SAAAT,EAAAA,IAAAU,EAAA,EAAA,CAEQ,CAAA,EAAA,CAErB,CAAA,CAAA,CAGN"}