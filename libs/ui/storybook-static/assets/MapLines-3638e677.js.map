{"version":3,"file":"MapLines-3638e677.js","sources":["../../../../node_modules/react-map-gl/dist/esm/utils/assert.js","../../../../node_modules/react-map-gl/dist/esm/components/source.js","../../../../node_modules/react-map-gl/dist/esm/components/layer.js","../../src/components/molecules/MapLines/MapLines.tsx"],"sourcesContent":["export default function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\n//# sourceMappingURL=assert.js.map","import * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nlet sourceCounter = 0;\nfunction createSource(map, id, props) {\n    // @ts-ignore\n    if (map.style && map.style._loaded) {\n        const options = { ...props };\n        delete options.id;\n        delete options.children;\n        // @ts-ignore\n        map.addSource(id, options);\n        return map.getSource(id);\n    }\n    return null;\n}\n/* eslint-disable complexity */\nfunction updateSource(source, props, prevProps) {\n    assert(props.id === prevProps.id, 'source id changed');\n    assert(props.type === prevProps.type, 'source type changed');\n    let changedKey = '';\n    let changedKeyCount = 0;\n    for (const key in props) {\n        if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n            changedKey = key;\n            changedKeyCount++;\n        }\n    }\n    if (!changedKeyCount) {\n        return;\n    }\n    const type = props.type;\n    if (type === 'geojson') {\n        source.setData(props.data);\n    }\n    else if (type === 'image') {\n        source.updateImage({\n            url: props.url,\n            coordinates: props.coordinates\n        });\n    }\n    else if ('setCoordinates' in source && changedKeyCount === 1 && changedKey === 'coordinates') {\n        source.setCoordinates(props.coordinates);\n    }\n    else if ('setUrl' in source) {\n        // Added in 1.12.0:\n        // vectorTileSource.setTiles\n        // vectorTileSource.setUrl\n        switch (changedKey) {\n            case 'url':\n                source.setUrl(props.url);\n                break;\n            case 'tiles':\n                source.setTiles(props.tiles);\n                break;\n            default:\n        }\n    }\n    else {\n        // eslint-disable-next-line\n        console.warn(`Unable to update <Source> prop: ${changedKey}`);\n    }\n}\n/* eslint-enable complexity */\nfunction Source(props) {\n    const map = useContext(MapContext).map.getMap();\n    const propsRef = useRef(props);\n    const [, setStyleLoaded] = useState(0);\n    const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n    useEffect(() => {\n        if (map) {\n            /* global setTimeout */\n            const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\n            map.on('styledata', forceUpdate);\n            forceUpdate();\n            return () => {\n                var _a;\n                map.off('styledata', forceUpdate);\n                // @ts-ignore\n                if (map.style && map.style._loaded && map.getSource(id)) {\n                    // Parent effects are destroyed before child ones, see\n                    // https://github.com/facebook/react/issues/16728\n                    // Source can only be removed after all child layers are removed\n                    const allLayers = (_a = map.getStyle()) === null || _a === void 0 ? void 0 : _a.layers;\n                    if (allLayers) {\n                        for (const layer of allLayers) {\n                            // @ts-ignore (2339) source does not exist on all layer types\n                            if (layer.source === id) {\n                                map.removeLayer(layer.id);\n                            }\n                        }\n                    }\n                    map.removeSource(id);\n                }\n            };\n        }\n        return undefined;\n    }, [map]);\n    // @ts-ignore\n    let source = map && map.style && map.getSource(id);\n    if (source) {\n        updateSource(source, props, propsRef.current);\n    }\n    else {\n        source = createSource(map, id, props);\n    }\n    propsRef.current = props;\n    return ((source &&\n        React.Children.map(props.children, child => child &&\n            cloneElement(child, {\n                source: id\n            }))) ||\n        null);\n}\nexport default Source;\n//# sourceMappingURL=source.js.map","import { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\n/* eslint-disable complexity, max-statements */\nfunction updateLayer(map, id, props, prevProps) {\n    assert(props.id === prevProps.id, 'layer id changed');\n    assert(props.type === prevProps.type, 'layer type changed');\n    if (props.type === 'custom' || prevProps.type === 'custom') {\n        return;\n    }\n    const { layout = {}, paint = {}, \n    // @ts-expect-error filter is not defined on some layer types\n    filter, minzoom, maxzoom, beforeId } = props;\n    if (beforeId !== prevProps.beforeId) {\n        map.moveLayer(id, beforeId);\n    }\n    if (layout !== prevProps.layout) {\n        const prevLayout = prevProps.layout || {};\n        for (const key in layout) {\n            if (!deepEqual(layout[key], prevLayout[key])) {\n                map.setLayoutProperty(id, key, layout[key]);\n            }\n        }\n        for (const key in prevLayout) {\n            if (!layout.hasOwnProperty(key)) {\n                map.setLayoutProperty(id, key, undefined);\n            }\n        }\n    }\n    if (paint !== prevProps.paint) {\n        const prevPaint = prevProps.paint || {};\n        for (const key in paint) {\n            if (!deepEqual(paint[key], prevPaint[key])) {\n                map.setPaintProperty(id, key, paint[key]);\n            }\n        }\n        for (const key in prevPaint) {\n            if (!paint.hasOwnProperty(key)) {\n                map.setPaintProperty(id, key, undefined);\n            }\n        }\n    }\n    // @ts-expect-error filter is not defined on some layer types\n    if (!deepEqual(filter, prevProps.filter)) {\n        map.setFilter(id, filter);\n    }\n    if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n        map.setLayerZoomRange(id, minzoom, maxzoom);\n    }\n}\nfunction createLayer(map, id, props) {\n    // @ts-ignore\n    if (map.style && map.style._loaded && (!('source' in props) || map.getSource(props.source))) {\n        const options = { ...props, id };\n        delete options.beforeId;\n        // @ts-ignore\n        map.addLayer(options, props.beforeId);\n    }\n}\n/* eslint-enable complexity, max-statements */\nlet layerCounter = 0;\nfunction Layer(props) {\n    const map = useContext(MapContext).map.getMap();\n    const propsRef = useRef(props);\n    const [, setStyleLoaded] = useState(0);\n    const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n    useEffect(() => {\n        if (map) {\n            const forceUpdate = () => setStyleLoaded(version => version + 1);\n            map.on('styledata', forceUpdate);\n            forceUpdate();\n            return () => {\n                map.off('styledata', forceUpdate);\n                // @ts-ignore\n                if (map.style && map.style._loaded && map.getLayer(id)) {\n                    map.removeLayer(id);\n                }\n            };\n        }\n        return undefined;\n    }, [map]);\n    // @ts-ignore\n    const layer = map && map.style && map.getLayer(id);\n    if (layer) {\n        try {\n            updateLayer(map, id, props, propsRef.current);\n        }\n        catch (error) {\n            console.warn(error); // eslint-disable-line\n        }\n    }\n    else {\n        createLayer(map, id, props);\n    }\n    // Store last rendered props\n    propsRef.current = props;\n    return null;\n}\nexport default Layer;\n//# sourceMappingURL=layer.js.map","import { Layer, Source } from 'react-map-gl'\n\nexport const MapLines = ({\n  coordinates,\n}: {\n  coordinates?: [number, number][]\n}) => {\n  const dataOne = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'LineString',\n      coordinates,\n    },\n  }\n  return (\n    <Source type=\"geojson\" data={dataOne}>\n      <Layer\n        id=\"lineLayer\"\n        type=\"line\"\n        source=\"my-data\"\n        paint={{\n          'line-color': 'rgb(0,0,0)',\n          'line-width': 1,\n          'line-dasharray': [4, 2], // This creates a dashed pattern\n        }}\n      />\n    </Source>\n  )\n}\n"],"names":["assert","condition","message","sourceCounter","createSource","map","id","props","options","updateSource","source","prevProps","changedKey","changedKeyCount","key","deepEqual","type","Source","useContext","MapContext","propsRef","useRef","setStyleLoaded","useState","useMemo","useEffect","forceUpdate","version","_a","allLayers","layer","React.Children","child","cloneElement","updateLayer","layout","paint","filter","minzoom","maxzoom","beforeId","prevLayout","prevPaint","createLayer","layerCounter","Layer","error","MapLines","coordinates","dataOne","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2]}