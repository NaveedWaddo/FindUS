import{j as g}from"./jsx-runtime-ffb262ed.js";import{b as h,d as f}from"./exports-mapbox-5254a25e.js";import{r as l}from"./index-76fb7be0.js";function m(t,e){if(!t)throw new Error(e)}let S=0;function x(t,e,a){if(t.style&&t.style._loaded){const n={...a};return delete n.id,delete n.children,t.addSource(e,n),t.getSource(e)}return null}function _(t,e,a){m(e.id===a.id,"source id changed"),m(e.type===a.type,"source type changed");let n="",o=0;for(const r in e)r!=="children"&&r!=="id"&&!f(a[r],e[r])&&(n=r,o++);if(!o)return;const c=e.type;if(c==="geojson")t.setData(e.data);else if(c==="image")t.updateImage({url:e.url,coordinates:e.coordinates});else if("setCoordinates"in t&&o===1&&n==="coordinates")t.setCoordinates(e.coordinates);else if("setUrl"in t)switch(n){case"url":t.setUrl(e.url);break;case"tiles":t.setTiles(e.tiles);break}else console.warn(`Unable to update <Source> prop: ${n}`)}function b(t){const e=l.useContext(h).map.getMap(),a=l.useRef(t),[,n]=l.useState(0),o=l.useMemo(()=>t.id||`jsx-source-${S++}`,[]);l.useEffect(()=>{if(e){const r=()=>setTimeout(()=>n(s=>s+1),0);return e.on("styledata",r),r(),()=>{var s;if(e.off("styledata",r),e.style&&e.style._loaded&&e.getSource(o)){const d=(s=e.getStyle())===null||s===void 0?void 0:s.layers;if(d)for(const u of d)u.source===o&&e.removeLayer(u.id);e.removeSource(o)}}}},[e]);let c=e&&e.style&&e.getSource(o);return c?_(c,t,a.current):c=x(e,o,t),a.current=t,c&&l.Children.map(t.children,r=>r&&l.cloneElement(r,{source:o}))||null}function C(t,e,a,n){if(m(a.id===n.id,"layer id changed"),m(a.type===n.type,"layer type changed"),a.type==="custom"||n.type==="custom")return;const{layout:o={},paint:c={},filter:r,minzoom:s,maxzoom:d,beforeId:u}=a;if(u!==n.beforeId&&t.moveLayer(e,u),o!==n.layout){const y=n.layout||{};for(const i in o)f(o[i],y[i])||t.setLayoutProperty(e,i,o[i]);for(const i in y)o.hasOwnProperty(i)||t.setLayoutProperty(e,i,void 0)}if(c!==n.paint){const y=n.paint||{};for(const i in c)f(c[i],y[i])||t.setPaintProperty(e,i,c[i]);for(const i in y)c.hasOwnProperty(i)||t.setPaintProperty(e,i,void 0)}f(r,n.filter)||t.setFilter(e,r),(s!==n.minzoom||d!==n.maxzoom)&&t.setLayerZoomRange(e,s,d)}function M(t,e,a){if(t.style&&t.style._loaded&&(!("source"in a)||t.getSource(a.source))){const n={...a,id:e};delete n.beforeId,t.addLayer(n,a.beforeId)}}let j=0;function w(t){const e=l.useContext(h).map.getMap(),a=l.useRef(t),[,n]=l.useState(0),o=l.useMemo(()=>t.id||`jsx-layer-${j++}`,[]);if(l.useEffect(()=>{if(e){const r=()=>n(s=>s+1);return e.on("styledata",r),r(),()=>{e.off("styledata",r),e.style&&e.style._loaded&&e.getLayer(o)&&e.removeLayer(o)}}},[e]),e&&e.style&&e.getLayer(o))try{C(e,o,t,a.current)}catch(r){console.warn(r)}else M(e,o,t);return a.current=t,null}const L=({coordinates:t})=>{const e={type:"Feature",properties:{},geometry:{type:"LineString",coordinates:t}};return g.jsx(b,{type:"geojson",data:e,children:g.jsx(w,{id:"lineLayer",type:"line",source:"my-data",paint:{"line-color":"rgb(0,0,0)","line-width":1,"line-dasharray":[4,2]}})})};try{L.displayName="MapLines",L.__docgenInfo={description:"",displayName:"MapLines",props:{coordinates:{defaultValue:null,description:"",name:"coordinates",required:!1,type:{name:"[number, number][]"}}}}}catch{}export{L as M};
//# sourceMappingURL=MapLines-3638e677.js.map
