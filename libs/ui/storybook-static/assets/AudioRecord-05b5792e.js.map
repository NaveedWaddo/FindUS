{"version":3,"file":"AudioRecord-05b5792e.js","sources":["../../../../node_modules/@tabler/icons-react/dist/esm/icons/IconMicrophone.js","../../../../node_modules/@tabler/icons-react/dist/esm/icons/IconPlayerStop.js","../../src/components/molecules/AudioRecord/AudioRecord.tsx"],"sourcesContent":["/**\n * @tabler/icons-react v2.30.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconMicrophone = createReactComponent(\"microphone\", \"IconMicrophone\", [\n  [\n    \"path\",\n    {\n      d: \"M9 2m0 3a3 3 0 0 1 3 -3h0a3 3 0 0 1 3 3v5a3 3 0 0 1 -3 3h0a3 3 0 0 1 -3 -3z\",\n      key: \"svg-0\"\n    }\n  ],\n  [\"path\", { d: \"M5 10a7 7 0 0 0 14 0\", key: \"svg-1\" }],\n  [\"path\", { d: \"M8 21l8 0\", key: \"svg-2\" }],\n  [\"path\", { d: \"M12 17l0 4\", key: \"svg-3\" }]\n]);\n\nexport { IconMicrophone as default };\n//# sourceMappingURL=IconMicrophone.js.map\n","/**\n * @tabler/icons-react v2.30.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconPlayerStop = createReactComponent(\"player-stop\", \"IconPlayerStop\", [\n  [\n    \"path\",\n    {\n      d: \"M5 5m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z\",\n      key: \"svg-0\"\n    }\n  ]\n]);\n\nexport { IconPlayerStop as default };\n//# sourceMappingURL=IconPlayerStop.js.map\n","import { IconMicrophone, IconPlayerStop, IconTrash } from '@tabler/icons-react'\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  StorageReference,\n  uploadBytes,\n} from 'firebase/storage'\nimport { useState } from 'react'\n\nimport { Button } from '../../atoms/Button'\nimport { useAppSelector } from '@findus-org/store'\nimport { selectUser } from '@findus-org/store/user'\nimport { storage } from '@findus-org/network/src/config/firebase'\nimport { makeId } from '@findus-org/util'\nimport { notification$ } from '@findus-org/util/subjects'\n\nexport interface IAudioRecordProps {\n  setAudio: (url: string | null) => void\n}\n\nexport const AudioRecord = ({ setAudio }: IAudioRecordProps) => {\n  const [recorder, setRecorder] = useState<MediaRecorder | null>(null)\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)\n  const [audioStorageRef, setAudioStorageRef] =\n    useState<StorageReference | null>(null)\n\n  const user = useAppSelector(selectUser)\n\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n      const mediaRecorder = new MediaRecorder(stream)\n      setRecorder(mediaRecorder)\n      mediaRecorder.start()\n\n      mediaRecorder.ondataavailable = (e) => {\n        handleUpload(new Blob([e.data], { type: 'audio/webm' }))\n      }\n    })\n  }\n\n  const handleUpload = (blob: Blob | null) => {\n    if (!blob || !user.uid) return null\n\n    setAudioBlob(blob)\n\n    const storageRef = ref(storage, `/audio/${user.uid}/${makeId()}.mp3`)\n    setAudioStorageRef(storageRef)\n\n    uploadBytes(storageRef, blob)\n      .then((snapshot) => {\n        console.log('Uploaded a blob or file!', snapshot)\n\n        getDownloadURL(snapshot.ref).then((url) => {\n          console.log(url)\n          setAudio(url)\n          notification$.next({\n            message: `Audio upload successful.`,\n            type: 'info',\n          })\n        })\n      })\n      .catch((err) => {\n        notification$.next({\n          message: `Audio upload failed. Please try again.`,\n          type: 'error',\n        })\n      })\n  }\n\n  return (\n    <div className=\"flex items-center justify-center h-24 bg-white shadow\">\n      {audioBlob ? (\n        <>\n          <audio src={URL.createObjectURL(audioBlob)} controls />\n          <Button\n            variant=\"text\"\n            size=\"none\"\n            onClick={async () => {\n              if (!audioStorageRef) return\n              await deleteObject(audioStorageRef)\n              setAudioStorageRef(null)\n              setAudio(null)\n              setAudioBlob(null)\n              notification$.next({ message: 'Audio file deleted.' })\n            }}\n          >\n            <IconTrash className=\"text-red-500\" />\n          </Button>\n        </>\n      ) : null}\n\n      {!(recorder?.state === 'recording') ? (\n        !audioBlob ? (\n          <div>\n            <Button\n              type=\"button\"\n              variant=\"text\"\n              color=\"white\"\n              size=\"none\"\n              onClick={startRecording}\n            >\n              Record <IconMicrophone className=\"inline w-4 h-4\" />\n            </Button>\n          </div>\n        ) : null\n      ) : (\n        <div className=\"flex flex-col items-center justify-center\">\n          <div className=\"flex items-center gap-2 py-2 animate-pulse\">\n            <span className=\"inline-block w-4 h-4 bg-red-500 rounded-full\" />{' '}\n            <div>Recording...</div>\n          </div>\n          <div>\n            <Button\n              type=\"button\"\n              variant=\"text\"\n              onClick={() => {\n                recorder?.stop()\n              }}\n            >\n              <div className=\"p-1 rounded-full outline outline-black outline-1\">\n                <IconPlayerStop className=\"w-4 h-4 fill-black\" />\n              </div>\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["IconMicrophone","createReactComponent","IconPlayerStop","AudioRecord","setAudio","recorder","setRecorder","useState","audioBlob","setAudioBlob","audioStorageRef","setAudioStorageRef","user","useAppSelector","selectUser","startRecording","stream","mediaRecorder","e","handleUpload","blob","storageRef","ref","storage","makeId","uploadBytes","snapshot","getDownloadURL","url","notification$","err","jsxs","Fragment","jsx","Button","deleteObject","IconTrash"],"mappings":"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","x_google_ignoreList":[0,1]}