{"version":3,"file":"ReportsTimeline-cc6c9f7e.js","sources":["../../../forms/src/approveReport.tsx","../../../../node_modules/@tabler/icons-react/dist/esm/icons/IconPin.js","../../src/components/templates/ReportsTimeline/ReportsTimeline.tsx"],"sourcesContent":["import { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm } from 'react-hook-form'\nimport { z } from 'zod'\n\nexport const formSchemaApproveReport = z.object({\n  description: z.string().optional(),\n})\n\nexport type FormTypeApproveReport = z.infer<typeof formSchemaApproveReport>\n\nexport const useFormApproveReport = () =>\n  useForm<FormTypeApproveReport>({\n    resolver: zodResolver(formSchemaApproveReport),\n  })\n","/**\n * @tabler/icons-react v2.30.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconPin = createReactComponent(\"pin\", \"IconPin\", [\n  [\n    \"path\",\n    {\n      d: \"M15 4.5l-4 4l-4 1.5l-1.5 1.5l7 7l1.5 -1.5l1.5 -4l4 -4\",\n      key: \"svg-0\"\n    }\n  ],\n  [\"path\", { d: \"M9 15l-4.5 4.5\", key: \"svg-1\" }],\n  [\"path\", { d: \"M14.5 4l5.5 5.5\", key: \"svg-2\" }]\n]);\n\nexport { IconPin as default };\n//# sourceMappingURL=IconPin.js.map\n","import { format } from 'date-fns'\nimport Link from 'next/link'\nimport { useFormApproveReport } from '@findus-org/forms/src/approveReport'\nimport { SetStateAction, useMemo, useState } from 'react'\nimport { useMap } from 'react-map-gl'\nimport { Button } from '../../atoms/Button'\nimport { Timeline, TimelineItem } from '../../molecules/TimelineItem'\nimport { CaseReport } from '../Home/Home'\nimport {\n  namedOperations,\n  useCreateApprovedReportMutation,\n  useCreateCommentMutation,\n} from '@findus-org/network/src/generated'\nimport { PlainButton } from '../../atoms/PlainButton'\nimport { Dialog } from '../../atoms/Dialog'\nimport { Form } from '../../atoms/Form'\nimport { HtmlLabel } from '../../atoms/HtmlLabel'\nimport { HtmlInput } from '../../atoms/HtmlInput'\nimport { IconPin } from '@tabler/icons-react'\nimport Accordion from '../../molecules/Accordion'\nimport { useAppSelector } from '@findus-org/store'\nimport { selectUid } from '@findus-org/store/user'\n\nexport interface IReportsTimelineProps {\n  reports?: CaseReport[]\n}\n\nexport const ReportsTimeline = ({ reports }: IReportsTimelineProps) => {\n  let groupedReports = useMemo(\n    () =>\n      reports?.reduce<{ [date: string]: CaseReport[] }>((acc, report) => {\n        let date: string = report.time.split('T')[0]\n        if (!acc[date]) {\n          acc[date] = []\n        }\n        acc[date].push(report)\n        return acc\n      }, {}),\n    [reports],\n  )\n\n  const { current: map } = useMap()\n\n  return (\n    <>\n      {Object.entries(groupedReports || {}).map(([date, reports]) => (\n        <div key={date} className=\"pt-3\">\n          <div className=\"text-center text-black \">\n            {format(new Date(date), 'PP')}\n          </div>\n          <Timeline className=\"text-black\">\n            {reports?.map((report) => (\n              <TimelineItem key={report.id} type={report.type}>\n                <div>\n                  <div className=\"text-lg\">\n                    {format(new Date(report.time), 'p')}\n                  </div>\n                </div>\n\n                <div className=\"flex flex-col gap-2\">\n                  {report.approvedReport?.id ? (\n                    <>\n                      <div className=\"flex items-center justify-between gap-2\">\n                        <div>\n                          <div>{report.description}</div>\n                          <div className=\"text-xs text-gray\">\n                            {report.witness?.name}\n                          </div>\n                        </div>\n                        {report.location?.latitude ? (\n                          <PlainButton\n                            className=\"flex items-center justify-center w-6 h-6 gap-2 border rounded-full hover:shadow-lg\"\n                            onClick={() => {\n                              map?.flyTo({\n                                center: [\n                                  report.location?.longitude || 0,\n                                  report.location?.latitude || 0,\n                                ],\n                                essential: true,\n                              })\n                            }}\n                          >\n                            <IconPin className=\"w-5 h-5\" />\n                          </PlainButton>\n                        ) : null}\n                      </div>\n\n                      <div>\n                        <div>{report.approvedReport?.description}</div>\n                        <div className=\"text-xs text-gray\">Officer report</div>\n                      </div>\n                      <div>\n                        {report.audio ? (\n                          <audio src={report.audio} controls />\n                        ) : null}\n                      </div>\n                      <Accordion\n                        title={`Comments (${report.comments?.length})`}\n                      >\n                        {report.comments?.map((comment) => (\n                          <div key={comment.id} className=\"mb-4\">\n                            <div>{comment.content}</div>\n                            <div className=\"text-xs text-gray\">\n                              {comment.witness?.name}\n                            </div>\n                            <div className=\"text-xs text-gray\">\n                              {format(new Date(comment.createdAt), 'PPp')}\n                            </div>\n                          </div>\n                        ))}\n                        <AddComment report={report} />\n                      </Accordion>\n                    </>\n                  ) : (\n                    <div>\n                      <div>{report.description}</div>\n                      <ApproveReport report={report} />\n                    </div>\n                  )}\n                </div>\n              </TimelineItem>\n            ))}\n          </Timeline>\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport const ApproveReport = ({ report }: { report: CaseReport }) => {\n  const [open, setOpen] = useState(false)\n  const [approve, { data, loading }] = useCreateApprovedReportMutation()\n\n  const { register, handleSubmit } = useFormApproveReport()\n  return (\n    <div className=\"py-1\">\n      <PlainButton\n        className=\"underline underline-offset-4\"\n        onClick={() => setOpen(true)}\n      >\n        Approve\n      </PlainButton>\n      <Dialog open={open} setOpen={setOpen} title={'Approve'}>\n        <div className=\"space-y-2\">\n          <div>{format(new Date(report.time), 'PPp')}</div>\n          <div>{report.description}</div>\n        </div>\n        <Form\n          onSubmit={handleSubmit(async ({ description }) => {\n            await approve({\n              variables: {\n                createApprovedReportInput: { description, id: report.id },\n              },\n              awaitRefetchQueries: true,\n              refetchQueries: [namedOperations.Query.case],\n            })\n          })}\n        >\n          <HtmlLabel title=\"Description\">\n            <HtmlInput\n              placeholder=\"Description...\"\n              {...register('description')}\n            />\n          </HtmlLabel>\n          <Button isLoading={loading} type=\"submit\">\n            Approve\n          </Button>\n        </Form>\n      </Dialog>\n    </div>\n  )\n}\n\nexport const AddComment = ({ report }: { report: CaseReport }) => {\n  const [createComment, { data, loading }] = useCreateCommentMutation()\n  const [comment, setComment] = useState<string>()\n  const uid = useAppSelector(selectUid)\n  if (!uid) {\n    return (\n      <Link className=\"inline-block my-2\" href=\"/login\">\n        Login to add comment.\n      </Link>\n    )\n  }\n  return (\n    <div className=\"mt-4 space-y-2\">\n      <HtmlInput\n        placeholder=\"Add comment...\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      />\n\n      {comment ? (\n        <Button\n          onClick={async () => {\n            await createComment({\n              variables: {\n                createCommentInput: {\n                  content: comment,\n                  reportId: report.id,\n                },\n              },\n              awaitRefetchQueries: true,\n              refetchQueries: [namedOperations.Query.case],\n            })\n          }}\n          isLoading={loading}\n        >\n          Add comment\n        </Button>\n      ) : null}\n    </div>\n  )\n}\n"],"names":["formSchemaApproveReport","z","useFormApproveReport","useForm","zodResolver","IconPin","createReactComponent","ReportsTimeline","reports","groupedReports","useMemo","acc","report","date","map","useMap","jsx","Fragment","reports2","jsxs","format","Timeline","TimelineItem","_a","_b","_c","PlainButton","_d","Accordion","_e","_f","comment","AddComment","ApproveReport","open","setOpen","useState","approve","data","loading","useCreateApprovedReportMutation","register","handleSubmit","Dialog","Form","description","namedOperations","HtmlLabel","HtmlInput","Button","createComment","useCreateCommentMutation","setComment","useAppSelector","selectUid","e","Link"],"mappings":"gyBAIa,MAAAA,EAA0BC,EAAE,OAAO,CAC9C,YAAaA,EAAE,OAAO,EAAE,SAAS,CACnC,CAAC,EAIYC,EAAuB,IAClCC,EAA+B,CAC7B,SAAUC,EAAYJ,CAAuB,CAC/C,CAAC,ECPH,IAAIK,EAAUC,EAAqB,MAAO,UAAW,CACnD,CACE,OACA,CACE,EAAG,wDACH,IAAK,OACN,CACF,EACD,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,OAAO,CAAE,EAC9C,CAAC,OAAQ,CAAE,EAAG,kBAAmB,IAAK,OAAO,CAAE,CACjD,CAAC,gmCCWM,MAAAC,EAAA,CAAA,CAAA,QAAAC,KAAA,CACL,IAAAC,EAAAC,EAAA,QAAqB,IAAAF,GAAA,YAAAA,EAAA,OAAA,CAAAG,EAAAC,IAAA,CAGf,IAAAC,EAAAD,EAAA,KAAA,MAAA,GAAA,EAAA,CAAA,EACA,OAAAD,EAAAE,CAAA,IACEF,EAAAE,CAAA,EAAA,IAEFF,EAAAE,CAAA,EAAA,KAAAD,CAAA,EACAD,CAAO,EAAA,IACJ,CAAAH,CAAA,CACC,EAGV,KAAA,CAAA,QAAAM,CAAA,EAAAC,EAAA,EAEA,OAAAC,EAAA,IAAAC,EAAA,SAAA,CAAA,SAAA,OAAA,QAAAR,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAAI,EAAAK,CAAA,IAAAC,EAAA,KAAA,MAAA,CAAA,UAAA,OAAA,SAAA,CAIQH,EAAAA,IAAA,MAAA,CAAA,UAAA,0BAAA,SAAAI,EAAA,IAAA,KAAAP,CAAA,EAAA,IAAA,CAAA,CAAA,EAEAG,EAAA,IAAAK,EAAA,CAAA,UAAA,aAAA,SAAAH,GAAA,YAAAA,EAAA,IAAAN,GAAAO,iBAAAA,OAAAA,EAAAA,KAAAG,EAAA,CAAA,KAAAV,EAAA,KAAA,SAAA,CAIMI,EAAA,IAAA,MAAA,CAAA,SAAAA,EAAA,IAAA,MAAA,CAAA,UAAA,UAAA,SAAAI,EAAA,IAAA,KAAAR,EAAA,IAAA,EAAA,GAAA,CAAA,CAAA,EAAA,EAIAI,EAAAA,IAAA,MAAA,CAAA,UAAA,sBAAA,UAAAO,EAAAX,EAAA,iBAAA,MAAAW,EAAA,GAAAJ,EAAAA,KAAAF,EAAA,SAAA,CAAA,SAAA,CAKME,EAAAA,KAAA,MAAA,CAAA,UAAA,0CAAA,SAAA,CACEA,OAAA,MAAA,CAAA,SAAA,CACEH,EAAAA,IAAA,MAAA,CAAA,SAAAJ,EAAA,WAAA,CAAA,EAAyBI,MAAA,MAAA,CAAA,UAAA,oBAAA,UAAAQ,EAAAZ,EAAA,UAAA,YAAAY,EAAA,KAAA,CAGzB,EAAA,GACFC,EAAAb,EAAA,WAAA,MAAAa,EAAA,SAAAT,EAAA,IAEEU,EAAC,CAAA,UAAA,qFACW,QAAA,IAAA,SAERZ,GAAA,MAAAA,EAAA,MAAA,CAAW,OAAA,GACDS,EAAAX,EAAA,WAAA,YAAAW,EAAA,YAAA,IACwBC,EAAAZ,EAAA,WAAA,YAAAY,EAAA,WAAA,CACD,EAC/B,UAAA,EACW,EACZ,EACH,SAAAR,EAAAA,IAAAX,EAAA,CAAA,UAAA,SAAA,CAAA,CAE6B,CAAA,EAAA,IAE7B,EAAA,EACNc,OAAA,MAAA,CAAA,SAAA,CAGEH,EAAA,IAAA,MAAA,CAAA,UAAAW,EAAAf,EAAA,iBAAA,YAAAe,EAAA,YAAA,EAAyCX,EAAA,IAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,iBAAA,CACQ,EAAA,EACnDA,EAAA,IAAA,MAAA,CAAA,SAAAJ,EAAA,MAAAI,EAAAA,IAAA,QAAA,CAAA,IAAAJ,EAAA,MAAA,SAAA,EAAA,CAAA,EAAA,KAAA,EAKAO,EAAA,KACAS,EAAC,CAAA,MAAA,cAAAC,EAAAjB,EAAA,WAAA,YAAAiB,EAAA,MAAA,IAC4C,SAAA,EAE1CC,EAAAlB,EAAA,WAAA,YAAAkB,EAAA,IAAAC,GAAA,OAAAZ,OAAAA,OAAA,MAAA,CAAA,UAAA,OAAA,SAAA,CAEGH,EAAAA,IAAA,MAAA,CAAA,SAAAe,EAAA,OAAA,CAAA,EAAsBf,MAAA,MAAA,CAAA,UAAA,oBAAA,UAAAO,EAAAQ,EAAA,UAAA,YAAAR,EAAA,KAAA,EAGtBP,EAAAA,IAAA,MAAA,CAAA,UAAA,oBAAA,SAAAI,EAAA,IAAA,KAAAW,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAGA,GAAAA,EAAA,EAAA,IAEHf,MAAAgB,EAAA,CAAA,OAAApB,EAAA,CAC2B,CAAA,CAAA,CAC9B,CAAA,CAAA,EAAAO,EAAAA,KAAA,MAAA,CAAA,SAAA,CAIAH,EAAAA,IAAA,MAAA,CAAA,SAAAJ,EAAA,WAAA,CAAA,EAAyBI,MAAAiB,EAAA,CAAA,OAAArB,EAAA,CACM,CAAA,CAAA,CAAA,CAAA,CAGrC,CAAA,EAAAA,EAAA,EAAA,IAAA,CAGN,GAAAC,CAAA,CAAA,CAAA,CAAA,CAKV,EAEOoB,EAAA,CAAA,CAAA,OAAArB,KAAA,CACL,KAAA,CAAAsB,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAA,CAAA,KAAAC,EAAA,QAAAC,CAAA,CAAA,EAAAC,IAEA,CAAA,SAAAC,EAAA,aAAAC,CAAA,EAAAxC,EAAA,EACA,OAAAiB,EAAA,KAAA,MAAA,CAAA,UAAA,OAAA,SAAA,CAEIH,EAAA,IAAAU,EAAC,CAAA,UAAA,+BACW,QAAA,IAAAS,EAAA,EAAA,EACiB,SAAA,SAC5B,CAAA,EAEDhB,EAAA,KAAAwB,EAAA,CAAA,KAAAT,EAAA,QAAAC,EAAA,MAAA,UAAA,SAAA,CAEEhB,EAAAA,KAAA,MAAA,CAAA,UAAA,YAAA,SAAA,CACEH,EAAAA,IAAA,MAAA,CAAA,SAAAI,EAAA,IAAA,KAAAR,EAAA,IAAA,EAAA,KAAA,EAAA,EAA2CI,EAAAA,IAAA,MAAA,CAAA,SAAAJ,EAAA,WAAA,CAAA,CAClB,EAAA,EAC3BO,EAAA,KACAyB,EAAC,CAAA,SAAAF,EAAA,MAAA,CAAA,YAAAG,KAAA,CAEG,MAAAR,EAAA,CAAc,UAAA,CACD,0BAAA,CAAA,YAAAQ,EAAA,GAAAjC,EAAA,EAAA,CAC+C,EAC1D,oBAAA,GACqB,eAAA,CAAAkC,EAAA,MAAA,IAAA,CACsB,CAAA,CAC5C,CAAA,EACF,SAAA,CAED9B,EAAAA,IAAA+B,EAAA,CAAA,MAAA,cAAA,SAAA/B,EAAA,IACEgC,EAAC,CAAA,YAAA,iBACa,GAAAP,EAAA,aAAA,CACc,CAAA,EAAA,EAE9BzB,MAAAiC,EAAA,CAAA,UAAAV,EAAA,KAAA,SAAA,SAAA,UAAA,CAGA,CAAA,CAAA,CACF,EAAA,CACF,CAAA,CAAA,CAGN,EAEOP,EAAA,CAAA,CAAA,OAAApB,KAAA,CACL,KAAA,CAAAsC,EAAA,CAAA,KAAAZ,EAAA,QAAAC,CAAA,CAAA,EAAAY,IACA,CAAApB,EAAAqB,CAAA,EAAAhB,EAAA,SAAA,EAEA,OADAiB,EAAAC,CAAA,EAQAnC,EAAA,KAAA,MAAA,CAAA,UAAA,iBAAA,SAAA,CAEIH,EAAA,IAAAgC,EAAC,CAAA,YAAA,iBACa,MAAAjB,EACL,SAAAwB,GAAAH,EAAAG,EAAA,OAAA,KAAA,CACmC,CAAA,EAC5CxB,EAAAf,EAAA,IAGEiC,EAAC,CAAA,QAAA,SAAA,CAEG,MAAAC,EAAA,CAAoB,UAAA,CACP,mBAAA,CACW,QAAAnB,EACT,SAAAnB,EAAA,EACQ,CACnB,EACF,oBAAA,GACqB,eAAA,CAAAkC,EAAA,MAAA,IAAA,CACsB,CAAA,CAC5C,EACH,UAAAP,EACW,SAAA,aACZ,CAAA,EAAA,IAGC,CAAA,CAAA,EAhCNvB,EAAA,IAAAwC,EAAA,CAAA,UAAA,oBAAA,KAAA,SAAA,SAAA,uBAAA,CAAA,CAmCJ","x_google_ignoreList":[1]}