{"version":3,"file":"IsOfficer.stories-3016a3fd.js","sources":["../../src/components/organisms/IsOfficer/IsOfficer.tsx"],"sourcesContent":["import {\n  OfficerMeQuery,\n  useOfficerMeQuery,\n} from '@findus-org/network/src/generated'\nimport { LoaderPanel } from '../../molecules/Loader'\nimport { CreateOfficer } from '../../templates/Officer/Officer'\nimport { ReactNode } from 'react'\n\nexport interface IIsOfficerProps {\n  children: ReactNode\n}\ntype RenderPropChild = (cook: OfficerMeQuery['officerMe']) => ReactNode\n\nexport const IsOfficer = ({ children }: IIsOfficerProps) => {\n  const { data, loading } = useOfficerMeQuery()\n  if (loading) {\n    return <LoaderPanel />\n  }\n\n  if (!data?.officerMe) {\n    return <CreateOfficer />\n  }\n  return (\n    <>\n      {typeof children === 'function'\n        ? (children as RenderPropChild)(data.officerMe)\n        : children}\n    </>\n  )\n}\n"],"names":["IsOfficer","children","data","loading","useOfficerMeQuery","jsx","LoaderPanel","Fragment","CreateOfficer"],"mappings":"shDAaO,MAAAA,EAAA,CAAA,CAAA,SAAAC,KAAA,CACL,KAAA,CAAA,KAAAC,EAAA,QAAAC,CAAA,EAAAC,EAAA,EACA,OAAAD,EACEE,EAAA,IAAAC,EAAA,CAAA,CAAA,EAGFJ,GAAA,MAAAA,EAAA,UAGAG,MAAAE,EAAAA,SAAA,CAAA,SAAA,OAAAN,GAAA,WAAAA,EAAAC,EAAA,SAAA,EAAAD,CAAA,CAAA,EAFEI,EAAA,IAAAG,EAAA,CAAA,CAAA,CASJ"}